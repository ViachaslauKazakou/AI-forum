#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ RAG
"""
import sys
sys.path.append('/Users/Viachaslau_Kazakou/Work/AI-forum')

from app.ai_manager.forum_manager import ForumManager
from app.utils.logger_utils import setup_logger
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = setup_logger(__name__, level=logging.INFO)

def final_test():
    """–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    logger.info("üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û RAG")
    
    try:
        # –°–æ–∑–¥–∞–µ–º ForumManager
        manager = ForumManager()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        test_queries = [
            ("alaev", "–ß—Ç–æ –¥—É–º–∞–µ—à—å –æ –≤–æ–¥–∏—Ç–µ–ª—è—Ö?"),
            ("Sly32", "–ö–∞–∫ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Å –∫–æ–¥–æ–º?"),
            ("Domen77", "–¢–≤–æ–µ –º–Ω–µ–Ω–∏–µ –æ –∂–µ–Ω—â–∏–Ω–∞—Ö?")
        ]
        
        for character, query in test_queries:
            logger.info(f"\nüé≠ === –¢–ï–°–¢ –î–õ–Ø {character.upper()} ===")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
            docs = manager.forum_rag.get_character_relevant_docs(query, character, top_k=3)
            
            logger.info(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(docs)} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è {character}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
            correct_docs = sum(1 for doc in docs if doc.get('character', '').lower() == character.lower())
            
            if correct_docs == len(docs):
                logger.info(f"‚úÖ –í–°–ï –î–û–ö–£–ú–ï–ù–¢–´ –ö–û–†–†–ï–ö–¢–ù–´ –¥–ª—è {character}")
            else:
                logger.error(f"‚ùå –û–®–ò–ë–ö–ê: –Ω–∞–π–¥–µ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ—Ç –¥—Ä—É–≥–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –¥–ª—è {character}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            for i, doc in enumerate(docs[:2]):  # –ü–µ—Ä–≤—ã–µ 2
                content = doc.get('content', '')[:100] + '...'
                score = doc.get('similarity_score', 0)
                logger.info(f"   üìÑ –î–æ–∫—É–º–µ–Ω—Ç {i+1}: {doc.get('character')} (score={score:.3f})")
                logger.info(f"      {content}")
        
        logger.info(f"\nüèÜ === –ò–¢–û–ì–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê ===")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
        stats = manager.forum_rag.get_character_stats()
        logger.info(f"üìà –ü–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≤ –±–∞–∑–µ: {len(stats)}")
        
        for character, info in stats.items():
            logger.info(f"üë§ {character}: {info['count']} —Å–æ–æ–±—â–µ–Ω–∏–π")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç–≤–µ—Ç–∞ (–±–µ–∑ ollama –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ –ª–æ–≥–∞—Ö)
        logger.info(f"\nüí¨ === –¢–ï–°–¢ –ì–ï–ù–ï–†–ê–¶–ò–ò –û–¢–í–ï–¢–û–í ===")
        
        try:
            # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –±–µ–∑ –≤—ã–∑–æ–≤–∞ –º–æ–¥–µ–ª–∏
            context = manager.forum_rag.get_character_context("alaev", "sarcastic")
            logger.info(f"‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
            docs = manager.forum_rag.get_character_relevant_docs("–≤–æ–¥–∏—Ç–µ–ª–∏", "alaev", top_k=5)
            if docs:
                logger.info(f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: {len(docs)} –Ω–∞–π–¥–µ–Ω–æ")
            else:
                logger.warning(f"‚ö†Ô∏è –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞")
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        
        logger.info(f"\nüéâ === –†–ï–ó–£–õ–¨–¢–ê–¢ ===")
        logger.info(f"‚úÖ RAG —Å–∏—Å—Ç–µ–º–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        logger.info(f"‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        logger.info(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ JSON —Ñ–∞–π–ª–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
        logger.info(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏!")
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        logger.error(f"‚ùå Traceback: {traceback.format_exc()}")

if __name__ == "__main__":
    final_test()

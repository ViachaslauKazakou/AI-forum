#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –º–∞—Å—Å–∏–≤–æ–≤
"""

from app.ai_manager.forum_manager import ForumRAG

def test_extended_parsing():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –º–∞—Å—Å–∏–≤–æ–≤")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä ForumRAG
    rag = ForumRAG('app/ai_manager/forum_knowledge_base', 'forum_cache')
    
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ (—Ç–µ–∫—É—â–∏–π –º–µ—Ç–æ–¥)")
    docs_standard = rag.get_character_relevant_docs("–ß—Ç–æ –¥—É–º–∞–µ—à—å –æ –∂–µ–Ω—â–∏–Ω–∞—Ö?", "Domen77")
    print(f"   –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥: {len(docs_standard)} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è Domen77")
    for i, doc in enumerate(docs_standard, 1):
        print(f"   {i}. [{doc['mood']}] {doc['content'][:80]}... (score={doc['similarity_score']:.3f})")
    
    print("\n2Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ RAG —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º –ø–∞—Ä—Å–∏–Ω–≥–æ–º...")
    rag.setup_rag_with_extended_parsing()
    
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞")
    docs_extended = rag.get_character_relevant_docs_extended("–ß—Ç–æ –¥—É–º–∞–µ—à—å –æ –∂–µ–Ω—â–∏–Ω–∞—Ö?", "Domen77")
    print(f"   –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥: {len(docs_extended)} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è Domen77")
    
    for i, doc in enumerate(docs_extended, 1):
        print(f"   {i}. [{doc['mood']}] Thread: '{doc.get('thread_id', 'N/A')}' | Reply to: '{doc.get('reply_to', 'N/A')}'")
        print(f"      Context: {doc.get('context', 'general')}")
        print(f"      Content: {doc['content'][:100]}...")
        print(f"      Score: {doc['similarity_score']:.3f} | Method: {doc.get('extraction_method', 'standard')}")
        print()
    
    print("\n4Ô∏è‚É£ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
    print(f"   üìä –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥: {len(docs_standard)} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    print(f"   üìä –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥: {len(docs_extended)} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    print(f"   üìà –£–ª—É—á—à–µ–Ω–∏–µ: {len(docs_extended) - len(docs_standard)} –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    
    print("\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ nechaos (–ø—Ä–æ–±–ª–µ–º–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂)")
    docs_nechaos = rag.get_character_relevant_docs_extended("–ß—Ç–æ –¥—É–º–∞–µ—à—å –æ –∂–µ–Ω—â–∏–Ω–∞—Ö?", "nechaos")
    print(f"   nechaos (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π): {len(docs_nechaos)} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    
    for i, doc in enumerate(docs_nechaos, 1):
        print(f"   {i}. Thread: '{doc.get('thread_id', 'N/A')}' | Context: '{doc.get('context', 'general')}'")
        print(f"      Content: {doc['content'][:100]}...")
        print(f"      Score: {doc['similarity_score']:.3f}")
        print()

if __name__ == "__main__":
    test_extended_parsing()

services:
  
  forum_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: forum_app
    ports:
      - "8000:8000"    # Main Forum Application
    environment:
      # Используем host.docker.internal для доступа к localhost хост-машины
      - DATABASE_URL=postgresql+asyncpg://docker:postgres@host.docker.internal:5433/postgres
      # - AI_MANAGER_URL=http://ai_manager:8080
      - OLLAMA_URL=http://host.docker.internal:11434
    volumes:
      - ./app:/app/app
      # - ./logs:/app/logs
    networks:
      - ai_network
    # depends_on:
    #   postgres:
    #     condition: service_healthy
      # ai_manager:
      #   condition: service_healthy
    restart: unless-stopped
    # Добавляем extra_hosts для Linux систем
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ai_manager:
  #   build:
  #     context: .
  #     dockerfile: ai_manager/Dockerfile
  #   container_name: ai_manager
  #   ports:
  #     - "8002:8080"    # FastAPI (AI Manager API)
  #     - "11434:11434"  # Ollama
  #   environment:
  #     - OLLAMA_HOST=0.0.0.0
  #     - OLLAMA_PORT=11434
  #     - OLLAMA_MODELS=/app/ollama/models
  #     - LOG_LEVEL=info
  #   volumes:
  #     - ollama_models:/app/ollama/models
  #     - ./ai_manager/logs:/app/logs
  #     - ./ai_manager/api:/app/api
  #   networks:
  #     - ai_network
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 4G
  #         cpus: '2'
  #       reservations:
  #         memory: 2G
  #         cpus: '2'
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 60s

volumes:
  ollama_models:
    driver: local
  # ai_manager_logs:
  #   driver: local

networks:
  ai_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

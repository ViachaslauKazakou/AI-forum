#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π
"""
import asyncio
from app.database import async_session_maker
from app.managers.db_manager import category_crud, subcategory_crud


async def create_demo_categories():
    """–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    
    async with async_session_maker() as db:
        # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        print("–°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...")
        
        general_category = await category_crud.create_category(
            db, 
            "–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã", 
            "–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è"
        )
        print(f"‚úì –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {general_category.name}")
        
        tech_category = await category_crud.create_category(
            db, 
            "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", 
            "–û–±—Å—É–∂–¥–µ–Ω–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        )
        print(f"‚úì –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {tech_category.name}")
        
        news_category = await category_crud.create_category(
            db, 
            "–ù–æ–≤–æ—Å—Ç–∏", 
            "–ù–æ–≤–æ—Å—Ç–∏ –∏ —Å–æ–±—ã—Ç–∏—è –≤ –º–∏—Ä–µ IT"
        )
        print(f"‚úì –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {news_category.name}")
        
        help_category = await category_crud.create_category(
            db, 
            "–ü–æ–º–æ—â—å", 
            "–ü–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        )
        print(f"‚úì –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {help_category.name}")
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"
        print("\n–°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'...")
        
        await subcategory_crud.create_subcategory(
            db, 
            "Python", 
            tech_category.id, 
            "–û–±—Å—É–∂–¥–µ–Ω–∏–µ —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python"
        )
        print("‚úì –°–æ–∑–¥–∞–Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: Python")
        
        await subcategory_crud.create_subcategory(
            db, 
            "JavaScript", 
            tech_category.id, 
            "–û–±—Å—É–∂–¥–µ–Ω–∏–µ JavaScript –∏ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        )
        print("‚úì –°–æ–∑–¥–∞–Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: JavaScript")
        
        await subcategory_crud.create_subcategory(
            db, 
            "DevOps", 
            tech_category.id, 
            "DevOps, CI/CD, –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è"
        )
        print("‚úì –°–æ–∑–¥–∞–Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: DevOps")
        
        await subcategory_crud.create_subcategory(
            db, 
            "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö", 
            tech_category.id, 
            "PostgreSQL, MongoDB, Redis –∏ –¥—Ä—É–≥–∏–µ –ë–î"
        )
        print("‚úì –°–æ–∑–¥–∞–Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è "–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã"
        print("\n–°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è '–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã'...")
        
        await subcategory_crud.create_subcategory(
            db, 
            "–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ", 
            general_category.id, 
            "–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —Ñ–æ—Ä—É–º–∞"
        )
        print("‚úì –°–æ–∑–¥–∞–Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ")
        
        await subcategory_crud.create_subcategory(
            db, 
            "–§–ª–µ–π–º", 
            general_category.id, 
            "–û–±—â–∏–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –∏ –¥–∏—Å–∫—É—Å—Å–∏–∏"
        )
        print("‚úì –°–æ–∑–¥–∞–Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: –§–ª–µ–π–º")
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è "–ü–æ–º–æ—â—å"
        print("\n–°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è '–ü–æ–º–æ—â—å'...")
        
        await subcategory_crud.create_subcategory(
            db, 
            "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", 
            help_category.id, 
            "–ü—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–±–æ—Ç–æ–π —Ñ–æ—Ä—É–º–∞"
        )
        print("‚úì –°–æ–∑–¥–∞–Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
        
        await subcategory_crud.create_subcategory(
            db, 
            "–í–æ–ø—Ä–æ—Å—ã –Ω–æ–≤–∏—á–∫–æ–≤", 
            help_category.id, 
            "–í–æ–ø—Ä–æ—Å—ã –æ—Ç –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        )
        print("‚úì –°–æ–∑–¥–∞–Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è: –í–æ–ø—Ä–æ—Å—ã –Ω–æ–≤–∏—á–∫–æ–≤")
        
        print("\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã!")
        print("\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:")
        print("1. –ó–∞–π—Ç–∏ –≤ –∞–¥–º–∏–Ω–∫—É: http://localhost:8000/admin/categories")
        print("2. –°–æ–∑–¥–∞—Ç—å —Ç–æ–ø–∏–∫ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π: http://localhost:8000/create-topic")
        print("3. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: http://localhost:8000/")


if __name__ == "__main__":
    asyncio.run(create_demo_categories())
